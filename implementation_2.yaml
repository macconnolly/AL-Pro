# =============================================================================
# ADAPTIVE LIGHTING PRO - Implementation YAML v2
# Minimal user configuration for Adaptive Lighting Pro custom integration
# =============================================================================
#
# Purpose: User-specific configuration that complements the integration
# Size: ~200 lines (vs 3,216 lines in v1)
# Philosophy: Integration owns business logic, YAML owns user configuration
#
# What's in the Integration:
# - All state management (coordinator)
# - All calculations (environmental, sunset, boundaries)
# - All sensors (13+ sensors for complete visibility)
# - All buttons (brighter/dimmer/warmer/cooler/reset + scene buttons)
# - All services (adjust_brightness, apply_scene, etc.)
# - All automations (boundary application, timers, manual control)
# - Zen32 integration (button event monitoring)
# - Sonos integration (alarm monitoring, wake sequences)
#
# What's in THIS YAML:
# - Light groups (your specific physical lights)
# - Scene choreography (which lights to turn on/off for each scene)
# - Optional dashboard glue (if you prefer input_select over integration entities)
#
# =============================================================================

# =============================================================================
# LIGHT GROUPS - Your Physical Lights
# =============================================================================
# These define which physical lights belong to each zone.
# The integration doesn't control lights directly - it adjusts Adaptive Lighting
# boundaries. These groups are for scene choreography only.

light:
  # Main Living Zone - Aligned with AL zone
  - platform: group
    name: "main_living_lights"
    unique_id: "alp_main_living_lights_group"
    entities:
      - light.entryway_lamp
      - light.living_room_floor_lamp
      - light.office_desk_lamp
      - light.living_room_corner_accent
      - light.living_room_couch_lamp
      - light.living_room_credenza_light

  # Kitchen Island Zone
  - platform: group
    name: "kitchen_island_lights"
    unique_id: "alp_kitchen_island_lights_group"
    entities:
      - light.kitchen_island_pendants

  # Bedroom Primary Zone
  - platform: group
    name: "bedroom_primary_lights"
    unique_id: "alp_bedroom_primary_lights_group"
    entities:
      - light.master_bedroom_table_lamps
      - light.master_bedroom_corner_accent

  # Accent Spots Zone
  - platform: group
    name: "accent_spots_lights"
    unique_id: "alp_accent_spots_lights_group"
    entities:
      - light.dining_room_spot_lights
      - light.living_room_spot_lights

  # Recessed Ceiling Zone
  - platform: group
    name: "recessed_ceiling_lights"
    unique_id: "alp_recessed_ceiling_lights_group"
    entities:
      - light.kitchen_main_lights
      - light.living_room_hallway_lights

  # Convenience group for "all adaptive lights"
  - platform: group
    name: "all_adaptive_lights"
    unique_id: "alp_all_adaptive_lights_group"
    entities:
      - light.entryway_lamp
      - light.living_room_floor_lamp
      - light.office_desk_lamp
      - light.living_room_corner_accent
      - light.living_room_couch_lamp
      - light.living_room_credenza_light
      - light.kitchen_island_pendants
      - light.master_bedroom_table_lamps
      - light.master_bedroom_corner_accent
      - light.dining_room_spot_lights
      - light.living_room_spot_lights
      - light.kitchen_main_lights
      - light.living_room_hallway_lights

# =============================================================================
# SCENE CHOREOGRAPHY SCRIPTS
# =============================================================================
# These scripts control physical lights for each scene.
# The integration handles scene OFFSETS (brightness/warmth adjustments),
# these scripts handle physical light ON/OFF patterns.
#
# Pattern:
# 1. Call integration's apply_scene service (sets offsets)
# 2. Apply user-specific light choreography (turn lights on/off, set overrides)

script:
  # Scene 1: All Lights - Default scene with all zones active
  apply_scene_all_lights:
    alias: "Apply Scene: All Lights"
    icon: mdi:lightbulb-group
    sequence:
      # Set scene offsets in integration (0% brightness, 0K warmth = neutral)
      - service: adaptive_lighting_pro.apply_scene
        data:
          scene: all_lights

      # Light choreography: Turn on all lights, set spotlights to minimal
      - service: light.turn_on
        target:
          entity_id:
            - light.recessed_ceiling_lights
            - light.all_adaptive_lights
        data:
          transition: 2

      # Set accent spots to minimal brightness (prevent overpowering)
      - service: light.turn_on
        target:
          entity_id: light.accent_spots_lights
        data:
          brightness_pct: 2
          transition: 2

  # Scene 2: No Spotlights - For reading/focused work
  apply_scene_no_spotlights:
    alias: "Apply Scene: No Spotlights"
    icon: mdi:book-open-variant
    sequence:
      # Integration applies +15% brightness offset to compensate
      - service: adaptive_lighting_pro.apply_scene
        data:
          scene: no_spotlights

      # Turn off all spotlights
      - service: light.turn_off
        target:
          entity_id:
            - light.living_room_spot_lights
            - light.dining_room_spot_lights
        data:
          transition: 2

      # Keep other lights on
      - service: light.turn_on
        target:
          entity_id:
            - light.main_living_lights
            - light.kitchen_island_lights
            - light.bedroom_primary_lights
            - light.recessed_ceiling_lights
        data:
          transition: 2

  # Scene 3: Evening Comfort - Warm, relaxed lighting
  apply_scene_evening_comfort:
    alias: "Apply Scene: Evening Comfort"
    icon: mdi:weather-sunset-down
    sequence:
      # Integration applies -5% brightness, -500K warmth
      - service: adaptive_lighting_pro.apply_scene
        data:
          scene: evening_comfort

      # Turn off harsh overhead lights
      - service: light.turn_off
        target:
          entity_id:
            - light.recessed_ceiling_lights
            - light.living_room_hallway_lights
        data:
          transition: 1

      # Turn on warm accent lighting
      - service: light.turn_on
        target:
          entity_id:
            - light.kitchen_island_pendants
            - light.living_room_credenza_light
            - light.living_room_corner_accent
        data:
          transition: 1

      # Set dining spots to low warm accent
      - service: light.turn_on
        target:
          entity_id: light.dining_room_spot_lights
        data:
          brightness_pct: 15
          transition: 1

  # Scene 4: Ultra Dim - Movie/late night mode
  apply_scene_ultra_dim:
    alias: "Apply Scene: Ultra Dim"
    icon: mdi:movie-open
    sequence:
      # Integration applies -50% brightness, -500K warmth
      - service: adaptive_lighting_pro.apply_scene
        data:
          scene: ultra_dim

      # Turn off all overhead and spot lights
      - service: light.turn_off
        target:
          entity_id:
            - light.dining_room_spot_lights
            - light.living_room_spot_lights
            - light.kitchen_main_lights
            - light.living_room_hallway_lights
        data:
          transition: 1

      # Set kitchen island to minimal (path lighting)
      - service: light.turn_on
        target:
          entity_id: light.kitchen_island_lights
        data:
          brightness_pct: 10
          transition: 2

      # Main living lights will be dimmed by integration's -50% offset
      - service: light.turn_on
        target:
          entity_id: light.main_living_lights
        data:
          transition: 2

# =============================================================================
# OPTIONAL: Dashboard Integration Helpers
# =============================================================================
# If you prefer using input_select in dashboards instead of the integration's
# select.alp_scene entity, uncomment this section.
# Otherwise, you can use select.alp_scene directly in your dashboards.

# input_select:
#   alp_scene_selector:
#     name: "Lighting Scene"
#     options:
#       - "All Lights"
#       - "No Spotlights"
#       - "Evening Comfort"
#       - "Ultra Dim"
#     icon: mdi:palette-outline
#     initial: "All Lights"

# automation:
#   - id: alp_dashboard_scene_bridge
#     alias: "ALP - Dashboard Scene Bridge"
#     description: "Bridges dashboard input_select to integration scene selector"
#     trigger:
#       - platform: state
#         entity_id: input_select.alp_scene_selector
#     action:
#       - service: select.select_option
#         target:
#           entity_id: select.alp_scene
#         data:
#           option: "{{ trigger.to_state.state }}"
